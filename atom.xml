<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  <subtitle>未来的你,一定会感谢现在奋斗的你</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-22T08:45:42.308Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Cyb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js学习之(原型)继承</title>
    <link href="http://yoursite.com/2017/02/21/entend/"/>
    <id>http://yoursite.com/2017/02/21/entend/</id>
    <published>2017-02-21T13:11:35.000Z</published>
    <updated>2017-02-22T08:45:42.308Z</updated>
    
    <content type="html"><![CDATA[<p>参考《你不知道的JavaScript》<a id="more"></a><br>继承意味着复制操作，JavaScript(默认)不会复制对象属性。<br>JavaScript会在两个对象之间创建一个关联，这样一个对象就可以通过委托访问另一个对象的属性和函数。<br>函数不是构造函数，但是当且仅当使用 new 时，函数调用会变成“构造函数调用”。</p>
<p>创建一个关联对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Bar</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="comment">//ES6之前</span></div><div class="line">Bar.prototype = <span class="built_in">Object</span>.create(Foo.prototype);</div><div class="line"></div><div class="line"><span class="comment">//ES6</span></div><div class="line"><span class="built_in">Object</span>.setPrototypeOf(Bar.prototype,Foo.prototype);</div></pre></td></tr></table></figure></p>
<p>Object.create()会创建一个新对象(这里指Bar.prototype)并把新对象内部的[[Prototype]]关联到指定的对象中(这里指Foo)。</p>
<hr>
<p>[[Prototype]]机制就是存在于对象中的一个内部链接，它会引用其它对象。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考《你不知道的JavaScript》
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js学习之对象</title>
    <link href="http://yoursite.com/2017/02/20/object/"/>
    <id>http://yoursite.com/2017/02/20/object/</id>
    <published>2017-02-20T14:21:49.000Z</published>
    <updated>2017-02-21T14:52:03.814Z</updated>
    
    <content type="html"><![CDATA[<p>参考《你不知道的JavaScript》<a id="more"></a></p>
<h1 id="对象的定义"><a href="#对象的定义" class="headerlink" title="对象的定义"></a>对象的定义</h1><hr>
<h2 id="声明形式"><a href="#声明形式" class="headerlink" title="声明形式"></a>声明形式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj=&#123;</div><div class="line">	<span class="attr">key1</span>:value1,</div><div class="line">	<span class="attr">key2</span>:value2</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<hr>
<h2 id="构造形式"><a href="#构造形式" class="headerlink" title="构造形式"></a>构造形式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line">obj.key=value;</div></pre></td></tr></table></figure>
<hr>
<h1 id="对象的类型"><a href="#对象的类型" class="headerlink" title="对象的类型"></a>对象的类型</h1><hr>
<h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><p>对象是JavaScript的基础，在JavaScrpit中一共有六种主要类型。</p>
<ul>
<li><strong>string</strong></li>
<li><strong>boolean</strong></li>
<li><strong>number</strong></li>
<li><strong>null</strong></li>
<li><strong>undefined</strong></li>
<li><strong>object</strong></li>
</ul>
<hr>
<h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><p>一些基本类型对象的子类型，通常被成为内置对象。</p>
<ul>
<li>String</li>
<li>Number</li>
<li>Boolean</li>
<li>Object</li>
<li>Function</li>
<li>Array</li>
<li>Date</li>
<li>RegExp</li>
<li>Error<br>!!!在JavaScript中，它们只是一些内置函数，而不是类似于Java当中的类。!!!<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str1 = <span class="string">"I am a string"</span>;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> str1); <span class="comment">// string</span></div><div class="line"><span class="built_in">console</span>.log(str1 <span class="keyword">instanceof</span> <span class="built_in">String</span>); <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str2 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"I am a String"</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> str2); <span class="comment">// object</span></div><div class="line"><span class="built_in">console</span>.log(str2 <span class="keyword">instanceof</span> <span class="built_in">String</span>); <span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="comment">//检查str2对象</span></div><div class="line"><span class="built_in">Object</span>.prototype.toString.call(str2); <span class="comment">// [Object String]</span></div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="对象的内容"><a href="#对象的内容" class="headerlink" title="对象的内容"></a>对象的内容</h1><hr>
<h2 id="访问对象的值"><a href="#访问对象的值" class="headerlink" title="访问对象的值"></a>访问对象的值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj&#123;</div><div class="line">	<span class="attr">a</span> : <span class="number">2</span></div><div class="line">&#125;;</div><div class="line"><span class="built_in">console</span>.log(obj.a); <span class="comment">// 2</span></div><div class="line"><span class="built_in">console</span>.log(obj[<span class="string">"a"</span>]); <span class="comment">// 2</span></div></pre></td></tr></table></figure>
<p>访问对象的值，需要使用 .操作符和[]操作符。<br>.语法通常被成为属性访问，[]语法通常被成为键访问。</p>
<hr>
<h2 id="属性描述符"><a href="#属性描述符" class="headerlink" title="属性描述符"></a>属性描述符</h2><p>ECMAScript5中定义了一个叫”属性描述符”的对象。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj=&#123;&#125;;</div><div class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>&#123;</div><div class="line">	<span class="attr">value</span>:<span class="number">2</span>, <span class="comment">// 值</span></div><div class="line">	writable:<span class="literal">true</span>, <span class="comment">// 是否可写</span></div><div class="line">	configurable:<span class="literal">true</span>, <span class="comment">// 是否可配置</span></div><div class="line">	enumerable:<span class="literal">true</span>, <span class="comment">// 是否可枚举</span></div><div class="line">	setter:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, <span class="comment">// 设置值</span></div><div class="line">	getter:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125; <span class="comment">// 获取值</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="Writable"><a href="#Writable" class="headerlink" title="Writable"></a>Writable</h3><p>writable 决定是否可以修改属性的值。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</div><div class="line">	<span class="attr">value</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">writable</span>:<span class="literal">false</span>,</div><div class="line">	<span class="attr">configurable</span>:<span class="literal">true</span>,</div><div class="line">	<span class="attr">enumerable</span>:<span class="literal">true</span></div><div class="line">&#125;);</div><div class="line">obj.a = <span class="number">3</span>;</div><div class="line"><span class="built_in">console</span>.log(obj.a); <span class="comment">// 2,无法修改值,在严格模式下会报TypeError错误</span></div></pre></td></tr></table></figure></p>
<hr>
<h3 id="Configurable"><a href="#Configurable" class="headerlink" title="Configurable"></a>Configurable</h3><p>只要属性是可配置的，就可以使用defineProperty()方法来修改属性描述符<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line">obj.a = <span class="number">3</span>;</div><div class="line"><span class="built_in">console</span>.log(obj.a);</div><div class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</div><div class="line">	<span class="attr">value</span>:<span class="number">4</span>,</div><div class="line">	<span class="attr">writable</span>:<span class="literal">true</span>,</div><div class="line">	<span class="attr">configurable</span>:<span class="literal">false</span>,</div><div class="line">	<span class="attr">writable</span>:<span class="literal">true</span></div><div class="line">&#125;);</div><div class="line"><span class="built_in">console</span>.log(obj.a); <span class="comment">// 4</span></div><div class="line">obj.a = <span class="number">5</span>;</div><div class="line"><span class="built_in">console</span>.log(obj.a); <span class="comment">// 5</span></div><div class="line"></div><div class="line"><span class="keyword">delete</span> obj.a;</div><div class="line"><span class="built_in">console</span>.log(obj.a); <span class="comment">// 5，禁止删除这个属性</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</div><div class="line">	<span class="attr">value</span>:<span class="number">6</span>,</div><div class="line">	<span class="attr">writable</span>:<span class="literal">true</span>,</div><div class="line">	<span class="attr">configurable</span>:<span class="literal">true</span>,</div><div class="line">	<span class="attr">writable</span>:<span class="literal">true</span></div><div class="line">&#125;); <span class="comment">// TypeError,无法修改属性描述符</span></div></pre></td></tr></table></figure></p>
<p>由此可见，把configurable修改为false是单向操作，无法撤销！</p>
<hr>
<h3 id="Enumerable"><a href="#Enumerable" class="headerlink" title="Enumerable"></a>Enumerable</h3><p>控制对象的属性能否出现在属性枚举中，比如说for..in循环。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj=&#123;</div><div class="line">	<span class="attr">a</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">b</span>:<span class="number">3</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> obj)&#123;</div><div class="line">	<span class="built_in">console</span>.log(i);</div><div class="line">&#125; <span class="comment">// a b</span></div><div class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"a"</span>,&#123;</div><div class="line">	<span class="attr">value</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">writable</span>:<span class="literal">true</span>,</div><div class="line">	<span class="attr">configurable</span>:<span class="literal">true</span>,</div><div class="line">	<span class="attr">enumerable</span>:<span class="literal">false</span></div><div class="line">&#125;);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> obj)&#123;</div><div class="line">	<span class="built_in">console</span>.log(i);</div><div class="line">&#125; <span class="comment">// b</span></div></pre></td></tr></table></figure></p>
<hr>
<h3 id="Setter和Getter"><a href="#Setter和Getter" class="headerlink" title="Setter和Getter"></a>Setter和Getter</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj=&#123;</div><div class="line">	get a()&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>._a_;</div><div class="line">	&#125;</div><div class="line">	set a(value)&#123;</div><div class="line">		<span class="keyword">this</span>._a_ = value*<span class="number">2</span>;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line"><span class="built_in">Object</span>.defineProperty(obj,<span class="string">"b"</span>,&#123;</div><div class="line">	<span class="attr">get</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>.a*<span class="number">2</span>&#125;,</div><div class="line">&#125;);</div><div class="line">obj.a=<span class="number">2</span>;</div><div class="line"><span class="built_in">console</span>.log(obj.a); <span class="comment">// 4</span></div><div class="line"><span class="built_in">console</span>.log(obj.b); <span class="comment">// 8</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="禁止拓展"><a href="#禁止拓展" class="headerlink" title="禁止拓展"></a>禁止拓展</h2><p>禁止一个对象添属性并保留已有属性。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj=&#123;</div><div class="line">	a=<span class="number">2</span></div><div class="line">&#125;;</div><div class="line"><span class="built_in">Object</span>.preventExtensions(obj); <span class="comment">//禁止拓展</span></div><div class="line">obj.b=<span class="number">3</span>;</div><div class="line"><span class="built_in">console</span>.log(obj.b); <span class="comment">// undefined</span></div></pre></td></tr></table></figure></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考《你不知道的JavaScript》
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js学习之this</title>
    <link href="http://yoursite.com/2017/02/19/this/"/>
    <id>http://yoursite.com/2017/02/19/this/</id>
    <published>2017-02-19T13:12:43.000Z</published>
    <updated>2017-02-21T13:13:02.803Z</updated>
    
    <content type="html"><![CDATA[<p>参考《你不知道的JavaScript》<a id="more"></a></p>
<h1 id="绑定规则"><a href="#绑定规则" class="headerlink" title="绑定规则"></a>绑定规则</h1><hr>
<h2 id="默认绑定"><a href="#默认绑定" class="headerlink" title="默认绑定"></a>默认绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div><div class="line">foo(); <span class="comment">// 2</span></div></pre></td></tr></table></figure>
<p>默认绑定时,this指向全局对象。<br>但是在严格模式下,全局对象无法使用默认绑定。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="meta">	"use strict"</span>;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div><div class="line">foo(); <span class="comment">// Type Error:this is undefined</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="隐式绑定"><a href="#隐式绑定" class="headerlink" title="隐式绑定"></a>隐式绑定</h2><p>在一个对象内部创建包含一个指向函数的属性，并通过这个对象间接引用函数，<br>从而把this隐式绑定到这个对象上。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj =&#123;</div><div class="line">	<span class="attr">a</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">f</span>:foo</div><div class="line">&#125;</div><div class="line">obj.f(); <span class="comment">// 2</span></div></pre></td></tr></table></figure></p>
<p>this绑定到obj对象</p>
<h3 id="隐式丢失"><a href="#隐式丢失" class="headerlink" title="隐式丢失"></a>隐式丢失</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj =&#123;</div><div class="line">	<span class="attr">a</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">f</span>:foo</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> bar = obj.f;</div><div class="line"><span class="keyword">var</span> a = <span class="string">"hello"</span>;</div><div class="line">bar(); <span class="comment">// hello</span></div></pre></td></tr></table></figure>
<p>隐式绑定的函数丢失绑定对象，应用默认绑定。</p>
<hr>
<h2 id="显式绑定"><a href="#显式绑定" class="headerlink" title="显式绑定"></a>显式绑定</h2><p>使用 call() 和 apply() 方法，把this绑定到传进去的对象上<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj=&#123;</div><div class="line">	a=<span class="number">2</span>;</div><div class="line">&#125;</div><div class="line">foo.call(obj); <span class="comment">// 2</span></div></pre></td></tr></table></figure></p>
<p>与隐式绑定相同，显示绑定同样有着绑定丢失的情况<br>但是显示绑定的一个变种可以解决这个问题</p>
<h3 id="硬绑定"><a href="#硬绑定" class="headerlink" title="硬绑定"></a>硬绑定</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span> <span class="title">something</span>(<span class="params">something</span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a,something);</div><div class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.a + something;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj=&#123;</div><div class="line">	a=<span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> bar = foo.bind(obj);</div><div class="line"><span class="keyword">var</span> b = bar(<span class="number">3</span>); <span class="comment">// 2 3</span></div><div class="line"><span class="built_in">console</span>.log(b); <span class="comment">//5</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="new绑定"><a href="#new绑定" class="headerlink" title="new绑定"></a>new绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a</span>)</span>&#123;</div><div class="line">	<span class="keyword">this</span>.a=a;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> bar = <span class="keyword">new</span> foo(<span class="number">2</span>);</div><div class="line"><span class="built_in">console</span>.log(bar.a); <span class="comment">// 2</span></div></pre></td></tr></table></figure>
<p>创建一个新对象并把它绑定到foo()调用的this上</p>
<h1 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h1><hr>
<h2 id="显示绑定和隐式绑定"><a href="#显示绑定和隐式绑定" class="headerlink" title="显示绑定和隐式绑定"></a>显示绑定和隐式绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj1=&#123;</div><div class="line">	<span class="attr">a</span>:<span class="number">2</span>,</div><div class="line">	<span class="attr">foo</span>:foo</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> obj2=&#123;</div><div class="line">	a=<span class="number">3</span>,</div><div class="line">	<span class="attr">foo</span>:foo</div><div class="line">&#125;;</div><div class="line">obj1.foo(); <span class="comment">// 2</span></div><div class="line">obj2.foo(); <span class="comment">// 3</span></div><div class="line"></div><div class="line">obj1.foo.call(obj2); <span class="comment">// 3</span></div><div class="line">obj2.foo.call(obj1); <span class="comment">// 2</span></div></pre></td></tr></table></figure>
<p>可以看到，显示绑定优先级更高，在判断时应当先考虑是否可以应用显示绑定</p>
<hr>
<h2 id="new绑定和隐式绑定"><a href="#new绑定和隐式绑定" class="headerlink" title="new绑定和隐式绑定"></a>new绑定和隐式绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">something</span>)</span>&#123;</div><div class="line">	<span class="keyword">this</span>.a=something;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj1=&#123;</div><div class="line">	<span class="attr">foo</span>:foo</div><div class="line">&#125;;</div><div class="line"></div><div class="line">obj1.foo(<span class="number">2</span>);</div><div class="line"><span class="built_in">console</span>.log(obj1.a); <span class="comment">// 2</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> bar = <span class="keyword">new</span> obj1.foo(<span class="number">4</span>);</div><div class="line"><span class="built_in">console</span>.log(obj1.a); <span class="comment">// 2</span></div><div class="line"><span class="built_in">console</span>.log(bar.a); <span class="comment">// 4</span></div></pre></td></tr></table></figure>
<p>可以看到，new绑定比隐式绑定优先级更高</p>
<hr>
<h2 id="new绑定和显示绑定"><a href="#new绑定和显示绑定" class="headerlink" title="new绑定和显示绑定"></a>new绑定和显示绑定</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">something</span>)</span>&#123;</div><div class="line">	<span class="keyword">this</span>.a=something;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj1 = &#123;&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> bar = foo.bind(obj1);</div><div class="line">bar(<span class="number">2</span>);</div><div class="line">consolo.log(obj1.a); <span class="comment">// 2</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> baz = <span class="keyword">new</span> bar(<span class="number">3</span>);</div><div class="line"><span class="built_in">console</span>.log(obj1.a); <span class="comment">// 2</span></div><div class="line"><span class="built_in">console</span>.log(baz.a); <span class="comment">// 3</span></div></pre></td></tr></table></figure>
<p>可以看到，new绑定比显示绑定优先级更高</p>
<hr>
<h2 id="判断this顺序"><a href="#判断this顺序" class="headerlink" title="判断this顺序"></a>判断this顺序</h2><p>按照下面的顺序来判断this所应用的规则<br>1.函数是否在用new中调用(new绑定)</p>
<blockquote>
<p>var bar = new foo();</p>
</blockquote>
<p>2.函数是否通过call、apply或者bind(硬绑定)调用(显示绑定)</p>
<blockquote>
<p>var bar = foo.call(obj);</p>
</blockquote>
<p>3.函数是否在某个上下文对象中调用(隐式绑定)</p>
<blockquote>
<p>var bar = obj.foo();</p>
</blockquote>
<p>4.如果都不是的话,就使用默认绑定</p>
<blockquote>
<p>var bar = foo();</p>
</blockquote>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考《你不知道的JavaScript》
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Github</title>
    <link href="http://yoursite.com/2017/02/17/github/"/>
    <id>http://yoursite.com/2017/02/17/github/</id>
    <published>2017-02-17T09:24:33.000Z</published>
    <updated>2017-02-20T13:30:32.410Z</updated>
    
    <content type="html"><![CDATA[<p>学习Git<a id="more"></a></p>
<h1 id="一、windows安装git"><a href="#一、windows安装git" class="headerlink" title="一、windows安装git"></a>一、windows安装git</h1><p><a href="https://git-for-windows.github.io/" target="_blank" rel="external">下载链接</a></p>
<h1 id="二、建立远程仓库"><a href="#二、建立远程仓库" class="headerlink" title="二、建立远程仓库"></a>二、建立远程仓库</h1><h2 id="1-创建SSH-Key"><a href="#1-创建SSH-Key" class="headerlink" title="1.创建SSH Key"></a>1.创建SSH Key</h2><blockquote>
<p>$ ssh-keygen -t rsa -C “Cybbin@Cybbin.com”</p>
</blockquote>
<p>创建ssh,一路回车默认即可<br>创建.ssh目录,在该目录(我的是在C:\Users\Administrator目录下)下会有id_rsa,和id_rsa.pub文件<br>id_rsa是私钥,不能泄露<br>id_rsa.pub是公钥</p>
<h2 id="2-登陆Github"><a href="#2-登陆Github" class="headerlink" title="2.登陆Github"></a>2.登陆Github</h2><p>点击头像，打开Setting,点击左边的SSH and GPG keys,点击News SSH key<br>填上任意Title,把id_rsa.pub的内容粘贴到Key文本框里<br>然后点击Add SSH key</p>
<h1 id="三、git指令"><a href="#三、git指令" class="headerlink" title="三、git指令"></a>三、git指令</h1><h2 id="提交仓库"><a href="#提交仓库" class="headerlink" title="提交仓库"></a>提交仓库</h2><hr>
<blockquote>
<p>git init</p>
</blockquote>
<p>git目录初始化</p>
<hr>
<blockquote>
<p>git add .</p>
</blockquote>
<p>添加该目录下所有文件到暂存区</p>
<hr>
<blockquote>
<p>git commit -m ‘m’</p>
</blockquote>
<p>把文件提交到仓库,引号为提交的说明</p>
<hr>
<blockquote>
<p>git remote add origin git@github.com:Cybbin/jd.git</p>
</blockquote>
<p>将本地仓库与Github仓库关联</p>
<hr>
<blockquote>
<p>git push -u origin master</p>
</blockquote>
<p>将本地仓库推送到远程(Github)库的master主分支上<br>-u是第一次提交时,把本地的master分支与远程的master分支关联起来<br>在以后的推送就可以简化命令</p>
<blockquote>
<p>git push origin master</p>
</blockquote>
<hr>
<blockquote>
<p>git clone git@github.com:Cybbin/jd.git</p>
</blockquote>
<p>克隆远程库到本地,克隆在gitskills文件夹中</p>
<hr>
<h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><hr>
<blockquote>
<p>git log</p>
</blockquote>
<p>查看版本控制器的历史记录<br>commit后面为版本id</p>
<hr>
<blockquote>
<p>git log —pretty=oneline</p>
</blockquote>
<p>前面为版本commit id,后面的数字为在commit的时候后面引号内的内容</p>
<blockquote>
<p>git log –pretty=oneline –abbrev-commit</p>
</blockquote>
<p>只显示前几位commit id</p>
<hr>
<blockquote>
<p>git reset –hard HEAD^</p>
</blockquote>
<p>回到上个版本<br>上上个版本是 Head^^<br>上100个版本是 Head~100<br>回到第id个版本,id为git log出现的commit id</p>
<blockquote>
<p>git reset –hard id</p>
</blockquote>
<hr>
<blockquote>
<p>git reflog</p>
</blockquote>
<p>记录每一次命令的id<br>回退时找不到新版本的id时用(重返未来)</p>
<hr>
<blockquote>
<p>git status</p>
</blockquote>
<p>查看当前仓库的状态</p>
<hr>
<h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><hr>
<blockquote>
<p>git branch dev</p>
</blockquote>
<p>创建dev分支</p>
<hr>
<blockquote>
<p>git checkout dev</p>
</blockquote>
<p>切换到dev分支上</p>
<hr>
<blockquote>
<p>git checkout -b dev</p>
</blockquote>
<p>相当于这两句</p>
<blockquote>
<p>git branch dev<br>git checkout dev</p>
</blockquote>
<hr>
<blockquote>
<p>git branch</p>
</blockquote>
<p>列出所有分支,当前分支前有*号</p>
<hr>
<blockquote>
<p>git merge dev</p>
</blockquote>
<p>将dev分支合并到master主分支上,Fast forward模式</p>
<hr>
<blockquote>
<p>git merge dev –no-ff -m ‘’ dev</p>
</blockquote>
<p>禁用Fast forward模式，并提交备注信息</p>
<hr>
<blockquote>
<p>git branch -d dev</p>
</blockquote>
<p>删除dev分支,没有被合并时,如果有修改,无法删除</p>
<hr>
<blockquote>
<p>git branch -D dev</p>
</blockquote>
<p>强力删除dev分支</p>
<hr>
<blockquote>
<p>git log –graph</p>
</blockquote>
<p>列出分支合并图</p>
<hr>
<blockquote>
<p>git stash</p>
</blockquote>
<p>将当前工作现场隐藏</p>
<hr>
<blockquote>
<p>git stash list</p>
</blockquote>
<p>列出当前分支所有被隐藏的工作区</p>
<hr>
<blockquote>
<p>git stash pop</p>
</blockquote>
<p>恢复工作区,并删除stash内容</p>
<hr>
<blockquote>
<p>git stash apply stash@{0}</p>
</blockquote>
<p>恢复工作区,但没有删除stash内容<br>需要再用 git stash drop 来删除</p>
<hr>
<blockquote>
<p>git pull</p>
</blockquote>
<p>将最新的提交从origin抓下来</p>
<hr>
<h2 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h2><hr>
<blockquote>
<p>git tag v1.0</p>
</blockquote>
<p>设置当前标签为v1.0</p>
<hr>
<blockquote>
<p>git tag</p>
</blockquote>
<p>查看当前分支的所有标签(不是按时间顺序排列,按字母顺序排列)</p>
<hr>
<blockquote>
<p>git tab v1.0 id</p>
</blockquote>
<p>对当前分支的过去版本打标签,id为commit id(版本回退里有)</p>
<hr>
<blockquote>
<p>git show v1.0</p>
</blockquote>
<p>查看v1.0标签信息</p>
<hr>
<blockquote>
<p>git tag -d v1.0</p>
</blockquote>
<p>删除本地的标签</p>
<blockquote>
<p>git push origin :ref/tags/v1.0</p>
</blockquote>
<p>删除推送到远程的标签</p>
<hr>
<blockquote>
<p>git push origin v1.0</p>
</blockquote>
<p>推送标签到远程</p>
<blockquote>
<p>git push origin –tags</p>
</blockquote>
<p>一次性推送全部未推送到远程的标签</p>
<hr>
<h2 id="其它小命令"><a href="#其它小命令" class="headerlink" title="其它小命令"></a>其它小命令</h2><hr>
<blockquote>
<p>git remote -v</p>
</blockquote>
<p>查看远程库的信息</p>
<hr>
<blockquote>
<p>ls</p>
</blockquote>
<p>查看当前目录所有文件</p>
<hr>
<blockquote>
<p>touch README.md</p>
</blockquote>
<p>创建 README.md 文件</p>
<hr>
<blockquote>
<p>rm README.md</p>
</blockquote>
<p>删除 README.md 文件</p>
<hr>
<h1 id="四、踩过的坑"><a href="#四、踩过的坑" class="headerlink" title="四、踩过的坑"></a>四、踩过的坑</h1><hr>
<p>错误：<br>git commit 后运行 git status<br>出现  git commit On branch master nothing to commit, working tree clean<br>解决办法:<br>当前分支没有修改内容,可能是切换错分支了<br>查看分支</p>
<blockquote>
<p>git branch</p>
</blockquote>
<hr>
<p>错误：</p>
<blockquote>
<p>git push origin master<br>To git@github.com:Cybbin/jd.git<br> ! [rejected]        master -&gt; master (non-fast-forward)<br>error: failed to push some refs to ‘git@github.com:Cybbin/jd.git’<br>hint: Updates were rejected because the tip of your current branch is behind<br>hint: its remote counterpart. Integrate the remote changes (e.g.<br>hint: ‘git pull …’) before pushing again.<br>hint: See the ‘Note about fast-forwards’ in ‘git push –help’ for details.</p>
</blockquote>
<p>解决办法：</p>
<blockquote>
<p>git push -f origin master</p>
</blockquote>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习Git
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="language" scheme="http://yoursite.com/tags/language/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>js学习之ajax</title>
    <link href="http://yoursite.com/2017/02/01/ajax/"/>
    <id>http://yoursite.com/2017/02/01/ajax/</id>
    <published>2017-02-01T08:46:46.000Z</published>
    <updated>2017-02-21T13:13:13.148Z</updated>
    
    <content type="html"><![CDATA[<p>ajax源码:</p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;</div><div class="line">	xmlHttp = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(windoe.ActionXObject)&#123;</div><div class="line">	<span class="keyword">var</span> actionName = [<span class="string">'MSXML2.XMLHTTP'</span>,<span class="string">'Microsoft.XMLHTTP'</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&amp;lt;actionName.length;i++)&#123;</div><div class="line">		<span class="keyword">try</span>&#123;</div><div class="line">			xmlHttp = <span class="keyword">new</span> ActionXObject(actionName[i]);</div><div class="line">		&#125;<span class="keyword">catch</span>(e)&#123;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(!xmlHttp)&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'xmlHttp对象创建失败'</span>);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	xmlHttp.onreadystatechange=callback;</div><div class="line">	<span class="comment">//xmlHttp.open('get','url',true);</span></div><div class="line">	xmlHttp.open(<span class="string">'post'</span>,<span class="string">'url'</span>,<span class="literal">true</span>);</div><div class="line">	xmlHttp.setHeadRequest(<span class="string">'Content-type'</span>,<span class="string">'appplication/x-www-form-urlencode'</span>);</div><div class="line">	xmlHttp.send();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(xmlHttp.readyState)&#123;</div><div class="line">		<span class="keyword">if</span>(xmlHttp.status)&#123;</div><div class="line">			<span class="keyword">var</span> responseText = xmlHttp.responseText;</div><div class="line">			<span class="comment">//返回XML时</span></div><div class="line">			<span class="comment">//var responseXML = xmlHtpp.responseXML;</span></div><div class="line">			<span class="comment">//返回json时</span></div><div class="line">			<span class="comment">//responseText = eval('('+responseText+')');</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ajax源码:&lt;/p&gt;
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="ajax" scheme="http://yoursite.com/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>css水平垂直居中</title>
    <link href="http://yoursite.com/2017/01/25/css%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://yoursite.com/2017/01/25/css水平垂直居中/</id>
    <published>2017-01-25T12:52:30.000Z</published>
    <updated>2017-02-21T11:41:39.330Z</updated>
    
    <content type="html"><![CDATA[<p>4种将一个绝对定位元素水平垂直居中的方法<br><a id="more"></a></p>
<p>css代码:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.wrapper</span> &#123;</div><div class="line">	<span class="attribute">height</span>: <span class="number">500px</span>;</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">	<span class="comment">/*css3方法*/</span></div><div class="line">	<span class="comment">/*</span></div><div class="line">	 justify-content:center;/子元素水平居中/</div><div class="line">	 align-items:center;/子元素垂直居中/</div><div class="line">	 display:flex;</div><div class="line">	 */</div><div class="line">&#125;</div><div class="line"><span class="comment">/*Chrome,Firefox, Safari, Mobile Safari, IE8-10.*/</span></div><div class="line"><span class="selector-class">.div1</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">background</span>: red;</div><div class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">margin</span>: auto;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*******兼容IE6,7,流行方法*******/</span></div><div class="line"><span class="selector-class">.div2</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">background</span>: blue;</div><div class="line">	<span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">	<span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">	<span class="attribute">margin-left</span>: -<span class="number">50px</span>;</div><div class="line">	<span class="attribute">margin-top</span>: -<span class="number">50px</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*不兼容IE8*/</span></div><div class="line"><span class="selector-class">.div3</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">background</span>: red;</div><div class="line">	<span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">	<span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">	<span class="comment">/*</span></div><div class="line">	 -webkit-transform:translate(-50%,-50%);</div><div class="line">	 -ms-transform:translate(-50%,-50%);</div><div class="line">	 */</div><div class="line">	<span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</div><div class="line">&#125;</div><div class="line"><span class="comment">/*水平方向居中*/</span></div><div class="line"><span class="selector-class">.div3</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">	<span class="attribute">background</span>: red;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;4种将一个绝对定位元素水平垂直居中的方法&lt;br&gt;
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="http://yoursite.com/2017/01/25/markdown/"/>
    <id>http://yoursite.com/2017/01/25/markdown/</id>
    <published>2017-01-25T07:55:33.000Z</published>
    <updated>2017-02-21T12:15:29.625Z</updated>
    
    <content type="html"><![CDATA[<p>md语法<a id="more"></a></p>
<hr>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="section"># 这是H1</span></div></pre></td></tr></table></figure>
<p>效果：</p>
<h1 id="这是H1"><a href="#这是H1" class="headerlink" title="这是H1"></a>这是H1</h1><hr>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="section">## 这是H2 ##</span></div></pre></td></tr></table></figure>
<p>效果：</p>
<h2 id="这是H2"><a href="#这是H2" class="headerlink" title="这是H2"></a>这是H2</h2><hr>
<h1 id="标记区块"><a href="#标记区块" class="headerlink" title="标记区块"></a>标记区块</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="quote">&gt; 标记区块1</span></div><div class="line">标记区块1</div><div class="line"><span class="quote">&gt; &gt; 标记区块2</span></div></pre></td></tr></table></figure>
<p>效果：</p>
<blockquote>
<p>标记区块1<br>标记区块1</p>
<blockquote>
<p>标记区块2</p>
</blockquote>
</blockquote>
<hr>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;pre&gt;&lt;code&gt;</div><div class="line"><span class="code">     var i=0;</span></div><div class="line"><span class="code">     i++;</span></div><div class="line">&lt;/pre&gt;&lt;/code&gt;</div><div class="line"><span class="code">`print() ;`</span></div></pre></td></tr></table></figure>
<p>效果：</p>
<p><pre><code><br>     var i=0;<br>     i++;<br></code></pre><br><code>print() ;</code></p>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">* </span>Bird</div><div class="line"><span class="bullet">* </span>McHale</div><div class="line"><span class="bullet">* </span>Parish</div><div class="line"></div><div class="line">&lt;ul&gt;</div><div class="line">&lt;li&gt;Bird&lt;/li&gt;</div><div class="line">&lt;li&gt;McHale&lt;/li&gt;</div><div class="line">&lt;li&gt;Parish&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure>
<p>效果：</p>
<ul>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ul>
<ul><br><li>Bird</li><br><li>McHale</li><br><li>Parish</li><br></ul>

<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;ol&gt;</div><div class="line">&lt;li&gt;Bird&lt;/li&gt;</div><div class="line">&lt;li&gt;McHale&lt;/li&gt;</div><div class="line">&lt;li&gt;Parish&lt;/li&gt;</div><div class="line">&lt;/ol&gt;</div></pre></td></tr></table></figure>
<p>效果：</p>
<ol><br><li>Bird</li><br><li>McHale</li><br><li>Parish</li><br></ol>

<hr>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="emphasis">***</span></div><div class="line"><span class="section">___</span></div><div class="line">---</div></pre></td></tr></table></figure>
<p>效果：</p>
<hr>
<hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[<span class="string">点击预览</span>](<span class="link">http://www.baidu.com</span>)</div><div class="line">[<span class="string">点击预览</span>](<span class="link">http://www.baidu.com "预览"</span>)</div></pre></td></tr></table></figure>
<p>效果：<br><a href="http://www.baidu.com" target="_blank" rel="external">点击预览</a><br><a href="http://www.baidu.com" title="预览" target="_blank" rel="external">点击预览</a></p>
<hr>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="emphasis">*强调(斜体)*</span></div><div class="line"><span class="strong">**强调(加粗)**</span></div></pre></td></tr></table></figure>
<p>效果：<br><em>强调(斜体)</em><br><strong>强调(加粗)</strong></p>
<hr>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">Alt Text</span>](<span class="link">/uploads/1.jpg</span>)</div></pre></td></tr></table></figure>
<p>效果：<br><img src="/uploads/1.jpg" alt="Alt Text"></p>
<hr>
<h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div></pre></td></tr></table></figure>
<hr>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">|language  |language_key|</div><div class="line">|:--------:|:----------:|</div><div class="line">|css       |css         |</div><div class="line">|C++       |cpp         |</div><div class="line">|C# C      |cpp         |</div><div class="line">|Go        |go          |</div><div class="line">|HTTP      |http        |</div><div class="line">|Java      |java        |</div><div class="line">|Javascript|javascript  |</div><div class="line">|JSON      |json        |</div><div class="line">|Less      |less        |</div><div class="line">|Markdown  |markdown    |</div><div class="line">|Matlab    |matlab      |</div><div class="line">|PHP       |php         |</div><div class="line">|Python    |python      |</div><div class="line">|Ruby      |ruby        |</div><div class="line">|SCSS      |SCSS        |</div><div class="line">|SQL       |sql         |</div><div class="line">|XML       |xml         |</div></pre></td></tr></table></figure>
<p>效果：</p>
<table>
<thead>
<tr>
<th style="text-align:center">language</th>
<th style="text-align:center">language_key</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">css</td>
<td style="text-align:center">css</td>
</tr>
<tr>
<td style="text-align:center">C++</td>
<td style="text-align:center">cpp</td>
</tr>
<tr>
<td style="text-align:center">C# C</td>
<td style="text-align:center">cpp</td>
</tr>
<tr>
<td style="text-align:center">Go</td>
<td style="text-align:center">go</td>
</tr>
<tr>
<td style="text-align:center">HTTP</td>
<td style="text-align:center">http</td>
</tr>
<tr>
<td style="text-align:center">Java</td>
<td style="text-align:center">java</td>
</tr>
<tr>
<td style="text-align:center">Javascript</td>
<td style="text-align:center">javascript</td>
</tr>
<tr>
<td style="text-align:center">JSON</td>
<td style="text-align:center">json</td>
</tr>
<tr>
<td style="text-align:center">Less</td>
<td style="text-align:center">less</td>
</tr>
<tr>
<td style="text-align:center">Markdown</td>
<td style="text-align:center">markdown</td>
</tr>
<tr>
<td style="text-align:center">Matlab</td>
<td style="text-align:center">matlab</td>
</tr>
<tr>
<td style="text-align:center">PHP</td>
<td style="text-align:center">php</td>
</tr>
<tr>
<td style="text-align:center">Python</td>
<td style="text-align:center">python</td>
</tr>
<tr>
<td style="text-align:center">Ruby</td>
<td style="text-align:center">ruby</td>
</tr>
<tr>
<td style="text-align:center">SCSS</td>
<td style="text-align:center">SCSS</td>
</tr>
<tr>
<td style="text-align:center">SQL</td>
<td style="text-align:center">sql</td>
</tr>
<tr>
<td style="text-align:center">XML</td>
<td style="text-align:center">xml</td>
</tr>
</tbody>
</table>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;md语法
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
      <category term="language" scheme="http://yoursite.com/tags/language/"/>
    
  </entry>
  
</feed>
